# File: .env.example
# ==============================================================================
# GitLab Runner Configuration Template
# ==============================================================================
#
# INSTRUCTIONS:
# 1. Copy this file to '.env' (e.g., `cp .env.example .env`).
# 2. Fill in a value for EVERY variable below. The scripts are designed to
#    fail with an error if any variable is left blank.
#
# ==============================================================================

# --- 1. GitLab Instance Details ---
# The full URL of your GitLab instance (e.g., https://gitlab.com).
GITLAB_URL=https://gitlab.example.com
# The registration token from your GitLab project or admin area.
# Go to Settings > CI/CD > Runners > "New project runner" to find it.
REGISTRATION_TOKEN=

# --- 2. Runner Configuration (How it appears in GitLab) ---
# A human-readable description for the runner in the GitLab UI.
RUNNER_DESCRIPTION="Production Runner"
# Comma-separated list of tags. Jobs in .gitlab-ci.yml will use these tags
# to select this specific runner.
RUNNER_TAGS="docker,production"
# The executor to use. 'docker' is highly recommended for isolated, clean job environments.
RUNNER_EXECUTOR="docker"
# The default Docker image to use for jobs if not specified in .gitlab-ci.yml.
RUNNER_DEFAULT_DOCKER_IMAGE="alpine:latest"

# --- 3. Runner Behavior ---
# Set to "true" to allow this runner to pick up jobs that have no tags.
# Recommended: "false" to ensure jobs only run on intended runners.
RUN_UNTAGGED_JOBS="false"
# Lock the runner to the project it's registered to.
# "false" for a shared runner (can be enabled for other projects), "true" for a specific runner.
IS_LOCKED_TO_PROJECT="false"
# The pull policy for Docker images used in CI jobs.
# "if-not-present": Pulls image only if it's not on the host. Saves bandwidth.
# "always": Pulls image before every job. Ensures the latest version but is slower.
DOCKER_PULL_POLICY="if-not-present"

# --- 4. Docker Service Configuration (How the runner service operates) ---
# The GitLab Runner image and version to use for the service itself.
# Check Docker Hub for the latest stable version: https://hub.docker.com/r/gitlab/gitlab-runner/tags
RUNNER_IMAGE_NAME="gitlab/gitlab-runner:v18.2.1"
# The helper image version should match the main runner version.
# This image is used for tasks like cache and artifact handling.
DOCKER_HELPER_IMAGE="gitlab/gitlab-runner-helper:alpine3.19-x86_64-v18.2.1"
# The name for the Docker container running the runner service. Must be unique on the host.
CONTAINER_NAME="gitlab-runner"
# The path on the host machine to store the runner's persistent config.toml.
# A relative path like './config' is fine. It will be created if it doesn't exist.
CONFIG_VOLUME_PATH="./config"
# The restart policy for the container. 'unless-stopped' is recommended.
RESTART_POLICY="unless-stopped"
# The path to the Docker socket on the host. This should not be changed unless you have a custom Docker setup.
DOCKER_SOCKET_VOLUME_PATH="/var/run/docker.sock"

# --- 5. Global Runner Performance Settings ---
# Defines the total number of jobs this runner instance can execute simultaneously.
# A good starting point is the number of CPU cores on the host machine.
RUNNER_CONCURRENT_JOBS=1